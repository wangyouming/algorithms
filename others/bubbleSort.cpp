
void bubbleSort(int a[], int n) {
    if (n <= 1) return;
    for (int i = 0; i < n; ++i) {
        bool flag = false;
        for (int j = 0; j < n - i - 1; ++j) {
            if (a[j] > a[j+1]) {
                int tmp = a[j];
                a[j] = a[j+1];
                a[j+1] = tmp;
                flag = true;
            }
        }
        if (!flag) break;
    }
}

/*
最好情况下，要排序的数据已经是有序的了，只需要进行一次冒泡操作，就可以结束了，所以最好情况时间复杂度是O(n).
最坏情况，需要进行n次冒泡，所以最坏情况时间复杂度是O(n^2).
有序度、逆序度、满有序度
满有序度 = n*(n-1)/2
逆序度 = 满有序度 - 有序度
取中间值n*(n-1)/4表示初始有序度既不是很高也不是很低的平均情况，需要n*(n-1)/4次交换操作，比较操作肯定比交换操作多，
而复杂度的上限是O(n^2)，所以平均情况下的时间复杂度是O(n^2).
*/